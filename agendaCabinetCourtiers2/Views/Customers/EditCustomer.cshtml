@model agendaCabinetCourtiers2.Models.customers

@{
    ViewBag.Title = "Créer un client";
    ViewBag.defaultBudget = Model.budget;
    if (TempData.ContainsKey("defaultBudget"))
    {
        ViewBag.defaultBudget = TempData["defaultBudget"];
    }
}

<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="editCustomer" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCustomer">Modifier le client</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @using (Html.BeginForm("EditCustomer", "Customers"))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="row g-3 my-3">
                        @Html.ValidationSummary(true, "Veuillez corriger les erreurs et re-valider le formulaire.", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.idCustomers)

                        <div>
                            @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.mail, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.budget, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.budget, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.defaultBudget } })
                            @Html.ValidationMessageFor(model => model.budget, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Modifier</button>
                    <button type="reset" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            }
        </div>
    </div>
</div>

@*@model agendaCabinetCourtiers2.Models.customers

    @{
        ViewBag.Title = "Edit";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>customers</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idCustomers)

            <div class="form-group">
                @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.budget, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.budget, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.budget, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
